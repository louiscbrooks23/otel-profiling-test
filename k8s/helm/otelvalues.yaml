mode: deployment
command:
  extraArgs:
    - "--feature-gates=+service.profilesSupport"
config:
  exporters:
    debug:
      verbosity: detailed
    otlp:
      endpoint: pyroscope-service:4040
      tls:
        insecure: true
  extensions:
    health_check: {}
  processors:
    batch: {}
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25
  receivers:
    jaeger:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:14250
        thrift_compact:
          endpoint: ${env:MY_POD_IP}:6831
        thrift_http:
          endpoint: ${env:MY_POD_IP}:14268
    otlp:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:4317
        http:
          endpoint: ${env:MY_POD_IP}:4318
    prometheus:
      config:
        scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
              - targets:
                  - ${env:MY_POD_IP}:8888
    zipkin:
      endpoint: ${env:MY_POD_IP}:9411
  service:
    extensions:
      - health_check
    pipelines:
      logs:
        exporters:
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
#      metrics:
#        exporters:
#          - debug
#        processors:
#          - memory_limiter
#          - batch
#        receivers:
#          - otlp
#         - prometheus
      traces:
        exporters:
          - debug
        processors:
          - memory_limiter
          - batch
        receivers:
          - otlp
          - jaeger
          - zipkin
      profiles:
        receivers:
          - otlp
        exporters:
          - debug
          - otlp

    telemetry:
      metrics:
        address: ${env:MY_POD_IP}:8888
service:
  type: LoadBalancer
